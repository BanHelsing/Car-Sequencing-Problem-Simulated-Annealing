De acuerdo a lo extraido de CSPLib:

First line: number of cars; number of options; number of classes.
Second line: for each option, the maximum number of cars with that option in a block. (p)
Third line: for each option, the block size to which the maximum number refers. (q)
Then for each class: index no.; no. of cars in this class; for each option, whether or not this class requires it (1 or 0).


x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

o = 5 // cantidad de opciones
p = {1, 2, 1, 2, 1}
q = {2, 3, 3, 5, 5}

for each option

get classes that require it:
represent x as binary array, 1 if that class requires that option, 0 otherwise

iterate over x in subsequences of size q

for each iteration, sum the ones, then subtract p, the result of this goes to the global sum

global sum -> lower the better